# This is the directory holding ar and ranlib
tooldir := /usr/local/i386-gnu/bin

# This is a machine on which to run MiG.  (MiG writes CPU dependent code,
# so MiG has to be run on a machine that's the same as the one that will 
# run the eventual code.)  If you are not doing cross-compilation, then
# you need to set MIGCOM and MIG below to the plain pathnames of those
# two programs respectively.
# If the version of GCC on this version is not the same as CCVERSION,
# then you must set CCVERSION-$(mighost) in the same fashion as is
# done below for ernst.gnu.ai.mit.edu and douglas.gnu.ai.mit.edu.
mighost := ernst.gnu.ai.mit.edu

# Set these options to the GCC compiler spec (the correct value
# can be found in /usr/local/lib/lib-gcc).
CCTARGET=i386-gnu
CCVERSION=$(firstword $(CCVERSION-$(hostname)) 2.6.2)
CCTYPE=-b $(CCTARGET) -V $(CCVERSION)
CCVERSION-douglas.gnu.ai.mit.edu = 2.5.7
CCVERSION-ernst.gnu.ai.mit.edu = 2.5.7

ccdir = /usr/local/lib/gcc-lib/$(CCTARGET)/$(CCVERSION)

ifndef BUILD_CC
export BUILD_CC := $(CC)
endif
CC=gcc $(CCTYPE) -O2 -pipe
ifeq (,$(wildcard /usr/local/lib/migcom))
MIGCOM=rsh $(mighost) cd `pwd` \; umask `umask` \; /usr/local/lib/migcom 
else
MIGCOM=/usr/local/lib/migcom
endif
CPP=$(CC) -E -x c
export CPP
# I put a /usr/local/bin/mig on the hp300s that will run $CPP locally and
# rsh to ernst to run migcom. --roland
MIG=mig # rsh $(mighost) cd `pwd` \; mig
AR=$(tooldir)/ar
RANLIB=$(tooldir)/ranlib
LD=$(tooldir)/ld -L$(ccdir)

INSTALL_BIN=i386-gnu-objcopy -S
#INSTALL_BIN=cp

machine := i386
