dnl Process this file with autoconf to produce a configure script.
AC_REVISION([$Id: configure.in,v 1.4 1996/05/01 02:14:08 roland Exp $])
AC_PREREQ(2.4)			dnl Minimum Autoconf version required.
AC_INIT(hurd/hurd_types.h)	dnl A distinctive file to look for in srcdir.

AC_PREFIX_DEFAULT()		dnl Default to empty prefix, not /usr/local.

AC_CANONICAL_HOST
case "$host_os" in
gnu*) ;;
*) AC_MSG_ERROR([sorry, this is the gnu os, not $host_os]) ;;
esac

AC_PROG_INSTALL

AC_CHECK_TOOL(CC, gcc)
# That check handles cross-compilation well, but AC_PROG_CC tests for GCC
# and sets default CFLAGS nicely for us, so do that too.
AC_PROG_CC
# Require GCC.
if test x$GCC != xyes; then
  AC_MSG_ERROR([this code uses GNU C extensions, you must compile with GCC])
fi

AC_CHECK_TOOL(LD, ld)
AC_CHECK_TOOL(OBJCOPY, objcopy)
AC_CHECK_TOOL(AR, ar)
AC_CHECK_TOOL(RANLIB, ranlib)
AC_CHECK_TOOL(MIG, mig)

dnl Let these propagate from the environment.
AC_SUBST(CFLAGS) AC_SUBST(CPPFLAGS) AC_SUBST(LDFLAGS)

if test $srcdir = .; then
  # Configuring in source directory; don't create any Makefiles.
  makefiles=
else
  # We are configuring in a separate build tree.
  # Create a Makefile in the top-level build directory and
  # one for each subdirectory Makefile in the source.
  makefiles="`cd $srcdir; for file in Makefile */Makefile; do \
			    echo ${file}:build.mk.in; done`"
fi

AC_OUTPUT(config.make ${makefiles},
	  [if test `cd $srcdir; /bin/pwd` != `/bin/pwd`; then
	     rm -f Makeconf
	     echo 'include $(top_srcdir)/Makeconf' >Makeconf
	   fi])

dnl Local Variables:
dnl comment-start: "dnl "
dnl comment-end: ""
dnl comment-start-skip: "\\bdnl\\b\\s *"
dnl compile-command: "autoconf"
dnl End:
